name: main

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 소스 코드를 체크아웃합니다.
      - uses: actions/checkout@v3

      # SSH Agent를 시작하고 SSH 키를 추가합니다.
      - name: Start SSH Agent and Add Key
        run: |
          eval "$(ssh-agent -s)"  # ssh-agent 시작
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
        shell: bash

      # SSH 연결 테스트
      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.GCP_HOST }} "echo 'SSH Connection Successful'"
        shell: bash

      # Java 환경을 설정합니다.
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # application.properties 파일을 생성합니다.
      - name: Set up application.properties
        run: |
          mkdir -p ./movie-book/src/main/resources
          echo "${{ secrets.APPLICATION }}" > ./movie-book/src/main/resources/application.properties

      # application.properties 파일이 올바르게 생성되었는지 확인합니다.
      - name: Verify application.properties file
        run: |
          ls -R ./movie-book/src/main/resources
          cat ./movie-book/src/main/resources/application.properties

      # gradlew 파일에 실행 권한을 부여합니다.
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: movie-book

      # Gradle을 사용해 프로젝트를 빌드합니다.
      - name: Build with Gradle
        run: ./gradlew clean build
        working-directory: movie-book

      # 빌드된 JAR 파일을 원격 서버로 복사합니다.
      - name: Copy jar file to remote
        run: |
          scp -o StrictHostKeyChecking=no ./movie-book/build/libs/*.jar ubuntu@${{ secrets.GCP_HOST }}:/home/ubuntu/cicd/
        shell: bash

      # 배포 스크립트 파일을 원격 서버로 복사합니다.
      - name: Copy deploy script file to remote
        run: |
          scp -o StrictHostKeyChecking=no deploy.sh ubuntu@${{ secrets.GCP_HOST }}:/home/ubuntu/cicd/
        shell: bash

      # 원격 서버에서 배포 스크립트를 실행합니다.
      - name: Execute deploy script
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.GCP_HOST }} "chmod +x /home/ubuntu/cicd/deploy.sh && sh /home/ubuntu/cicd/deploy.sh"
        shell: bash
