name: main

on:
  push:
    branches: [ main ]
    

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 소스 코드를 체크아웃합니다.
      - uses: actions/checkout@v3

      # Java 환경을 설정합니다.
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # application.properties 파일을 생성합니다.
      - name: Set up application.properties
        run: |
          mkdir -p ./movie-book/src/main/resources
          echo "${{ secrets.APPLICATION }}" > ./movie-book/src/main/resources/application.properties

      # application.properties 파일이 올바르게 생성되었는지 확인합니다.
      - name: Verify application.properties file
        run: |
          ls -R ./movie-book/src/main/resources
          cat ./movie-book/src/main/resources/application.properties

      # gradlew 파일에 실행 권한을 부여합니다.
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        working-directory: movie-book

      # Gradle을 사용해 프로젝트를 빌드합니다.
      - name: Build with Gradle
        run: ./gradlew clean build
        working-directory: movie-book
      
      # 빌드된 JAR 파일을 GitHub Artifacts에 업로드합니다.
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: movie-book/build/libs/*.jar

      # JAR 파일을 원격 서버로 복사합니다.
      - name: Copy jar file to remote
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.GCP_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "./movie-book/build/libs/*.jar"
          target: "/home/ubuntu/cicd"
          strip_components: 2

      # 배포 스크립트 파일을 원격 서버로 복사합니다.
      - name: Copy deploy script file to remote
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.GCP_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "deploy.sh"
          target: "/home/ubuntu/cicd"

      # 원격 서버에서 배포 스크립트를 실행합니다.
      - name: Execute deploy script
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.GCP_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script_stop: true
          script: |
            chmod +x /home/ubuntu/cicd/deploy.sh
            sh /home/ubuntu/cicd/deploy.sh
