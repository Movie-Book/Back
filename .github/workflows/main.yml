name: main

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # SSH 키를 추가하여 ssh-agent에서 사용하도록 설정
      - name: Start SSH Agent and Add Key
        run: |
          eval "$(ssh-agent -s)"
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' | ssh-add -
        shell: bash

      # SSH 연결 테스트
      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.GCP_HOST }} "echo 'SSH Connection Successful'"
        shell: bash

      # GCP 서버에 ssh-agent와 ssh-add 실행
      - name: Start ssh-agent and add key on GCP server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.GCP_HOST }} "
          eval \$(ssh-agent -s) && ssh-add ~/.ssh/movie-book
          "
        shell: bash

      # Gradle을 사용해 프로젝트를 빌드합니다.
      - name: Build with Gradle
        run: ./gradlew clean build
        working-directory: movie-book

      # 빌드된 JAR 파일을 원격 서버로 복사합니다.
      - name: Copy jar file to remote
        run: |
          scp -o StrictHostKeyChecking=no ./movie-book/build/libs/*.jar ubuntu@${{ secrets.GCP_HOST }}:/home/ubuntu/cicd/
        shell: bash

      # 배포 스크립트 파일을 원격 서버로 복사합니다.
      - name: Copy deploy script file to remote
        run: |
          scp -o StrictHostKeyChecking=no deploy.sh ubuntu@${{ secrets.GCP_HOST }}:/home/ubuntu/cicd/
        shell: bash

      # 원격 서버에서 배포 스크립트를 실행합니다.
      - name: Execute deploy script
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.GCP_HOST }} "chmod +x /home/ubuntu/cicd/deploy.sh && sh /home/ubuntu/cicd/deploy.sh"
        shell: bash
